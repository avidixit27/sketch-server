Document with your brief discussion of synchronization issues:
1. Our move function would only work if the mouse was moved slowly. Otherwise, the mouse would move faster than the shape was updated on the screen. We figured this is because the process of moving the shape was very inefficient. Upon further investigation, we were calculating the current shape thousands of times while dragging, so we made a current shape instance variable that was calculated on click and never again. That fixed the issue.
2. Another issue we struggled with was having a shape update locally while dragging and  before release and then fully draw on all screens on release. 
3. We also had an issue where if we recolored a shape and then drew a new shape over the existing shape the original shape would disappear. We then realized we had an issue keeping track of shape IDs and that we were drawing over the original shape after recoloring occured. 
4. Initially, when we would press the mouse and the shape was on rectangle, even before dragging the mouse, a rectangle would appear as a larger shape. We then realized that we were passing in the parameters for the corners of the rectangle in a different order than we were using in the setCorners method. Once we corrected this, the rectangle would only appear upon dragging the mouse. 
